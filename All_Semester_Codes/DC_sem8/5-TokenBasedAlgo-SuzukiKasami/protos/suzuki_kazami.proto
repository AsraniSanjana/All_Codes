syntax = "proto3";

package suzuki_kazami;

message QueueRequest {
    repeated string data = 1;
}

message QueueResponse {
  repeated string data = 1;
}

// Information about the each Site
message SiteInfo{
    int32 site_id = 1;
    int32 sequence_number = 2;
    bool in_critical_section = 3;
}

message RequestTokenMessage {
    string site_id = 1;
    int32 sequence_number = 2;
    bool in_critical_section = 3;
    bool has_token = 4;
    string server_address = 5;
}

message ReplyTokenMessage {
    string site_id = 1;
    int32 sequence_number = 2;
    bool in_critical_section = 3;
    bool has_token = 4;
    string server_address = 5;
}
service SuzukiKazami {
  rpc GetQueue(QueueRequest) returns (QueueResponse);
  rpc UpdateQueue(QueueResponse) returns (QueueResponse);
  rpc DeleteQueue(QueueResponse) returns (QueueResponse);
  rpc RequestToken(RequestTokenMessage) returns (ReplyTokenMessage);
  rpc EnterCriticalSection(ReplyTokenMessage) returns (ReplyTokenMessage);
  rpc ReleaseCriticalSection(ReplyTokenMessage) returns (ReplyTokenMessage);
//  rpc RecieveToken(ReplyTokenMessage) returns (ReplyTokenMessage);
//  rpc SendToken(ReplyTokenMessage) returns (ReplyTokenMessage);

}
